
1. 模块变更:

  Sender相关:

    config.yml: "add new ***_sender"

    api/router:

      struct:
        Engine: "add new  **Sender"

      function:
        initRouter: [58,64,74,80] #添加新的Sender需要的数据库、NewSender、Engine部分参数。数字代表行数(行数为参考值，请根据具体业务逻辑修改)
        Stop: "add new stop goroutine"
        NewEngine: "call NewMsgHandler(**)"

    api/v1/send:

      struct:
        MsgHandler: "add new Sender"

      function:
        NewMsgHandler: "add new Sender parameter"
        send: "add new classification data to the loop"

    options/options:

      struct:
        options: "add new *Sender.Configs"


  日志入库和信息推送相关:

    model/model:  # 添加新业务日志入库所需结构体，T开头的为每一个业务所需的表，SendMsgRecords结构体是总表，其他S开头的还没用到。注意需要添加对应的TableName()函数，用来生成对应的表

    model/interface:  # 添加业务api所需的表，用于发送服务

    model/repository:

      function:
        SaveLog: [30,38,75] # 行数为参考值，请根据具体业务逻辑修改

      add_new_saveFunc(): "添加新的save函数"

    internal/msgchannel: #在此文当下添加新业务推送逻辑，具体修改需仔细研究.......................


2. 整体设计和预期进度:

  1:推送和日志数据库 : # 9.29-10.9 (3天)

    1.1: "阅读api文档，确定钉钉机器人和通知类业务推送所需字段"
    1.2: "确定日志数据库所需字段；解决一些细节问题"
    1.3: "编写接口文档"

  2. 编写代码:    # 10.10—10.11 (2天)
    2.1: "理清钉钉机器人和通知类业务推送部分相关逻辑"
    2.2: "根据相关逻辑，编写钉钉机器人和通知类业务推送部分代码"
    2.4: "根据字段信息，编写整理钉钉机器人和通知类业务日志入库部分的代码"
    2.5: "根据业务需求，修改sender执行逻辑部分的代码"

  3: "调试代码并和php组进行沟通"   #  10.12（1天）
  4: "开始多级联调"   # 10.13 (1天)




